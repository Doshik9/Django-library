# Generated by Django 4.1.2 on 2022-11-09 12:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_type_id', models.CharField(choices=[('RM', 'Romance'), ('FN', 'Fantasy'), ('HR', 'Horror'), ('MS', 'Mystery'), ('TH', 'Thriller')], default='RM', help_text='Жанр', max_length=50)),
                ('book_name', models.CharField(help_text='Название книги', max_length=50)),
                ('author', models.CharField(help_text='Автор', max_length=50)),
                ('publication_date', models.DateField(auto_now_add=True, help_text='Дата публикации')),
                ('publisher', models.CharField(help_text='Издатель', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateTimeField(auto_now_add=True, help_text='Дата бронирования')),
                ('return_date', models.DateTimeField(help_text='Дата возврата', null=True)),
                ('book', models.ForeignKey(help_text='Номер книги', on_delete=django.db.models.deletion.CASCADE, related_name='user_books', to='books_app.book')),
                ('reader', models.ForeignKey(help_text='Номер пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='readers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('reader', 'book')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='readers',
            field=models.ManyToManyField(through='books_app.UserBook', to=settings.AUTH_USER_MODEL),
        ),
    ]
